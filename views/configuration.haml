.snippet#histogram
  :plain
    var data = [];
    for (var index = 0; index < rows.length; index++) {
        var item = rows[index];
        data.push([item['key'], item['value']]);
    }

    $.plot($("#placeholder"), [data], {
        series: {
            bars: {
                show: true,
                fill: true
            }
        },
        xaxis: {
            mode: "time",
            timeformat: "%y/%m/%d",
        }
    });

.snippet#identity
  :plain
    function(data) {
        return data;
    }

.snippet#counter
  :plain
    var value = rows[0]['value'];
    $("#placeholder").html(value);
    $("#placeholder").addClass('counter');

.row-fluid
  .span12
    %h1
      Configuration
    %p.explain
      Define your map/reduce algorithms and choose how they will be displayed on the analysis page.

    - if @views.nil?
      .alert.alert-block.alert-warning
        You don't have any view yet! Take a few minutes to create some. And relax: it's just map/reduce.
    - else
      %h2
        %span.counter
          = @views.length
        views defined in the database

- @views.each do |key, view|
  .view
    .row-fluid
      .span12
        %h3{id:key}
          %i.icon-caret-right
          = key
          •
          %a{href:"#{@futon_url}database.html?alyzer/_design/alyzer_views/_view/#{key}"}
            Edit in Futon
            %i.icon-external-link
          •
          %a{href:"/visualization/#{key}"}
            View
            %i.icon-dashboard
          .pull-right
            %a.remove{href:"/configuration/delete?name=#{key}"}
              %i.icon-remove

    %form.edit{method:'POST', action:'edit'}
      %input{type:'hidden', value:key, name:"name"}
      .row-fluid
        .span6
          %textarea{name: "map"}
            = view['map']
        .span6
          %textarea{name: "reduce"}
            = view['reduce']
      .row-fluid
        .span12
          %textarea{name: "adapter"}
            = view['adapter']
      .row-fluid
        .span4
          %label.select
            %select.input-small{name:"widget"}
              %option{value:"identity", selected: view['widget'].eql?('identity') ? 'yes' : nil}
                Identity
              %option{value:"counter", selected: view['widget'].eql?('counter') ? 'yes' : nil}
                Counter
              %option{value:"graph", selected: view['widget'].eql?('graph') ? 'yes' : nil}
                Graph
              %option{value:"histogram", selected: view['widget'].eql?('histogram') ? 'yes' : nil}
                Histogram
              %option{value:"custom", selected: view['widget'].eql?('custom') ? 'yes' : nil}
                Custom
        .span4
          %label.checkbox
            %input{type:"checkbox", name:"do_reduce", value:"true", checked: view['do_reduce'] ? 'yes' : nil}
            Perform the reduce operation
        .span4
          %input.btn.btn-primary.pull-right{type:"submit", value:"Update"}


.row-fluid
  .span12
    %form#new_view{action:"new", method:"POST"}
      %input.input-block-level{type:"text", name:"name", placeholder:"View name"}
      %input.btn.btn-primary.btn-large{type:"submit", value:"Create a new view"}


- content_for(:js) do
  %script{src: "http://codemirror.net/lib/codemirror.js"}
  %script{src: "http://codemirror.net/mode/javascript/javascript.js"}

  :javascript
    var editors = {};
    var changed = false;
    function beautify() {
      $(this).find("textarea").each(function(){
        $(this).val(js_beautify($(this).val()));
        if ($(this).attr('name') === 'adapter') {
          editors[$(this).attr('name')] = CodeMirror.fromTextArea(this, {
            lineNumbers:true,
            onChange: function(){
              if (!changed) {
                $("select option").each(function(){
                  $(this).removeAttr('selected');
                });
                $("select option[value=custom]").attr('selected', 'yes');
              }
              else {
                changed = false;
              }
            }});
        }
        else {
          editors[$(this).attr('name')] = CodeMirror.fromTextArea(this, {lineNumbers:true});
        }
      });

    }

    $(document).ready(function() {
      $("form.edit").each(beautify);
      $("form.edit").submit(beautify);

      $("select").change(function(){
        var val = $("select option:selected").val();
        var val = $(this).find("option:selected").val();
        if (val != "custom") {
          changed = true;
          editors['adapter'].setValue($(".snippet#"+val).html());
        }
      });
    });
